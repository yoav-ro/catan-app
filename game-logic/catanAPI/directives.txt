Types:

{
    type: "endTurn"
    action: Will start the turn of the next player
    condition: always
    expectation: dice roll / knight activation
}

example:
{
    type: "endTurn",
    player: "blue"
}
----------------------------------------------------------
{
    type: "rollDice"
    action: roll the dice at the beggining of a turn
    condition: at the beggining of a turn. the only action that can happen before is a knight activation 
    expectation: any but another dice roll and trade response, robbPlayer (if 7)
}

example:
{
    type: "rollDice",
    player: "blue"
}
----------------------------------------------------------

{
    type: "build"
    action: build something on the board
    condition: after rollDice
    expectation: any but dice roll and trade response
}

examples:
{
    type: "build",
    player: "blue"
    item: {
        type: "settelment"
        x: 10,
        y: 45,
    }
}
{
    type: "build",
    player: "blue"
    item: {
        type: "road"
        startX: 10,
        startY: 45,
        endX: 30,
        endY: 45,
    }
}
----------------------------------------------------------

{
    type: "activateDevCard"
    action: activate a certien dev card.
    condition: after dice roll (unless knight). Once at a turn. Cant use just built cards (unless year of plenty)
    expectation: any but dice roll and trade response robbPlayer (if knight)
}

examples:
{
    type "activateDevCard",
    player: "blue",
    card: {
        type: "knight",
        newRobberX: 30,
        newRobberY: 40,
    }
}
{
    type "activateDevCard",
    player: "blue",
    card: {
        type: "monopolty",
        resource: "wood",
    }
}
{
    type "activateDevCard",
    player: "blue",
    card: {
        type: "yearOfPlenty",
        resourceA: "iron",
        newRobberY: "sheep",
    }
}
{
    type "activateDevCard",
    player: "blue",
    card: {
        type: "roadBuilding",
        firstRoadStartX: 0,
        firstRoadStartY: 0,
        firstRoadEndX: 70,
        firstRoadEndY: 0,
        secondRoadStartX: 70,
        secondRoadStartY: 0,
        secondRoadEndX: 140,
        secondRoadEndY: 0,
    }
}

----------------------------------------------------------

{
    type: "tradeReq"
    action: request a trade between two players
    condition: after dice roll
    expectation: any but dice roll
}

example: 
{
    type: "tradeReq",
    player: "blue",
    tradeWith: "red",
    givenResources: ["wood", "wood"],
    recievedResources: ["iron", "sheep"],
}

----------------------------------------------------------
{
    type "tradeWithPort"
    action: instantly trades with a requested port if a player has access to it.
    condition: after dice roll
    expectation: any but dice roll
}

example:
{
    type: "tradeWithPort"
    player: "blue",
    portType: "bank"
    resourceToGive: "wood",
    resourceToTake: "iron",
}

----------------------------------------------------------

{
    type: "tradeRes",
    action: is accepted, trades between the players,
    condition: after trade request,
    expectation: any but dice roll,
}

example: 
{
    type: "tradeRes",
    player: "red",
    tradeWith: "blue",
    givenResources: ["iron", "sheep"],
    recievedResources: ["wood", "wood"],
    isAccepted: true
}
----------------------------------------------------------

{
    type: "robbPlayer"
    action: steal a random resource from a selected player
    condition: after knight or rolling 7
    expectation: any
}
example:
{
    type: "robbPlayer",
    player: "blue",
    playerToRobb: "red",
}
----------------------------------------------------------

{
    type: "setupBuild"
    action: builds a settelment or a road in setup mode 
    condition: only in setup phase
    expectation: more setupBuilds, ending of setup phase
}

examples:
{
    type: "setupBuild",
    player: "blue"
    item: {
        name: "settelment"
        x: 10,
        y: 45,
    }
}
{
    type: "setupBuild",
    player: "blue"
    item: {
        name: "road"
        startX: 10,
        startY: 45,
        endX: 30,
        endY: 45,
    }
}

----------------------------------------------------------
